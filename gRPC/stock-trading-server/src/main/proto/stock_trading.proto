
syntax = "proto3";

package com.tanay.stocktrading;

option java_multiple_files = true;
option java_package = "com.tanay.stocktrading";
option java_outer_classname = "StockTradingProto";

service StockTradingService
{
    // Unary RPC -> get current stock price
    rpc getStockPrice(StockRequest) returns (StockResponse);

    // server streaming
    rpc subscribeStockPrice(StockRequest) returns (stream StockResponse);

    // client streaming
    rpc bulkStockOrder(stream StockOrder) returns (OrderSummary);

    // bi-directional streaming
    rpc liveTrading(stream StockOrder) returns (stream TradeStatus);
}

message StockRequest
{
    string stock_symbol = 1;
}

message StockResponse
{
    string stock_symbol = 1;
    double price = 2;
    string timestamp = 3;
}

message StockOrder
{
    string order_id = 1;
    string stock_symbol = 2;
    int32 quantity = 3;
    double price = 4;
    string order_type = 5; // BUY or SELL
}


message OrderSummary
{
    int32 total_orders = 1;
    double total_amount = 2;
    int32 success_count = 3;
}

message TradeStatus
{
    string order_id = 1;
    string status = 2;  // execute, failed, pending
    string message = 3; // reason if failed or success
    string timestamp = 4;
}